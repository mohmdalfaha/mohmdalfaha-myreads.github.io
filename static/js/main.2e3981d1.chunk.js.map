{"version":3,"sources":["BooksAPI.js","components/Shelves.js","components/BookSearch.js","components/MyReads.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","maxResults","data","books","Shelves","props","react_default","a","createElement","className","shelfTitle","length","role","aria-label","map","key","style","width","height","backgroundImage","imageLinks","thumbnail","value","onChange","event","moveToShelf","target","disabled","title","authors","join","PropTypes","array","isRequired","func","BookSearch","state","searchResult","handleQuery","BooksAPI","searchResults","error","_this","setState","searchedBooks","mergingBooks","forEach","Link","to","lib","type","debounceTimeout","this","string","placeholder","components_Shelves","Component","MyReads","filter","NoMatch","_ref","location","pathname","BooksApp","booksIds","b","newBooks","currentState","includes","toConsumableArray","_this2","_this3","HashRouter","Switch","Route","exact","path","render","components_MyReads","components_BookSearch","component","ReactDOM","src_App","document","getElementById"],"mappings":"qQACMA,EAAM,wCAIRC,EAAQC,aAAaD,MACpBA,IACHA,EAAQC,aAAaD,MAAQE,KAAKC,SAASC,SAAS,IAAIC,QAAQ,IAElE,IAAMC,EAAU,CACdC,OAAU,mBACVC,cAAiBR,GAaNS,EAAS,SAACC,EAAMC,GAAP,OACpBC,MAAK,GAAAC,OAAId,EAAJ,WAAAc,OAAiBH,EAAKI,IAAM,CAC/BC,OAAQ,MACRT,QAAQU,OAAAC,EAAA,EAAAD,CAAA,GACHV,EADE,CAELY,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAEV,YACtBW,KAAK,SAAAC,GAAG,OAAIA,EAAIC,UAERC,EAAS,SAACC,EAAOC,GAAR,OACpBf,MAAK,GAAAC,OAAId,EAAJ,WAAkB,CACrBgB,OAAQ,OACRT,QAAQU,OAAAC,EAAA,EAAAD,CAAA,GACHV,EADE,CAELY,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAEK,QAAOC,iBAC7BL,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAM,GAAI,OAAIA,EAAKC,0CCxCvB,SAASC,EAAQC,GACf,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmBJ,EAAMK,YACvCJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACY,IAAvBJ,EAAMF,MAAMQ,QACXL,EAAAC,EAAAC,cAAA,QAAMI,KAAK,MAAMC,aAAW,SAA5B,4CAIDR,EAAMF,OACLE,EAAMF,MAAMW,IAAI,SAAC9B,EAAMI,GAAP,OACdkB,EAAAC,EAAAC,cAAA,MAAIO,IAAK3B,GACPkB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OACEC,UAAU,aACVO,MAAO,CACLC,MAAO,IACPC,OAAQ,IACRC,gBAAe,OAAAhC,OACbH,EAAKoC,WACDpC,EAAKoC,WAAWC,UAChB,oCAHS,QAOnBf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,UACEc,MAAOtC,EAAKC,MACZsC,SAAU,SAAAC,GAAK,OACbnB,EAAMoB,YAAYzC,EAAMwC,EAAME,OAAOJ,SAGvChB,EAAAC,EAAAC,cAAA,UAAQc,MAAM,OAAOK,UAAQ,GAA7B,cAGArB,EAAAC,EAAAC,cAAA,UAAQc,MAAM,QAAd,QACAhB,EAAAC,EAAAC,cAAA,UAAQc,MAAM,oBAAd,qBAGAhB,EAAAC,EAAAC,cAAA,UAAQc,MAAM,cAAd,gBACAhB,EAAAC,EAAAC,cAAA,UAAQc,MAAM,QAAd,WAINhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAczB,EAAK4C,OAClCtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACZzB,EAAK6C,QAAU7C,EAAK6C,QAAQC,KAAK,MAAQ,kBAW9D1B,EAAQ2B,UAAY,CAClB5B,MAAO4B,IAAUC,MAAMC,WACvBR,YAAaM,IAAUG,KAAKD,YAEf7B,QC3DT+B,6MAOJC,MAAQ,CACNC,aAAc,MAGhBC,YAAc,SAAAd,GACZ,IAAMxB,EAAQwB,EAAME,OAAOJ,MACb,KAAVtB,EACFuC,EAAgBvC,GAAOJ,KAAK,SAAA4C,GACrBA,IAAiBA,EAAcC,OAClCC,EAAKC,SAAS,CAAEC,cAAe,KAEjC,IAAMC,EAAeL,EAAc1B,IAAI,SAAAuB,GAIrC,OAHAK,EAAKrC,MAAMF,MAAM2C,QAAQ,SAAA9D,GACnBA,EAAKI,KAAOiD,EAAajD,KAAIiD,EAAapD,MAAQD,EAAKC,SAEtDoD,IAETK,EAAKC,SAAS,CAAEN,aAAcQ,MAGhCH,EAAKC,SAAS,CAAEN,aAAc,8EAKhC,OACE/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAMC,GAAG,IAAIvC,UAAU,gBAAvB,SAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAACyC,EAAA,cAAD,CACEC,KAAK,OACLC,gBAAiB,IACjB7B,MAAO8B,KAAK/C,MAAMF,MAAMkD,OACxB9B,SAAU6B,KAAKd,YACfgB,YAAY,gCAIlBhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAC+C,EAAD,CACE9B,YAAa2B,KAAK/C,MAAMoB,YACxBf,WAAW,iBACXP,MAAOiD,KAAKhB,MAAMC,wBApDLmB,aAAnBrB,EACGJ,UAAY,CACjB5B,MAAO4B,IAAUC,MAAMC,WACvBI,aAAcN,IAAUC,MAAMC,WAC9BR,YAAaM,IAAUG,KAAKD,YAuDjBE,QC9DTsB,mLAMF,OACEnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,sBAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC+C,EAAD,CACEpD,MAAOiD,KAAK/C,MAAMF,MAAMuD,OACtB,SAAA1E,GAAI,MAAmB,qBAAfA,EAAKC,QAEfyB,WAAY,oBACZe,YAAa2B,KAAK/C,MAAMoB,cAG1BnB,EAAAC,EAAAC,cAAC+C,EAAD,CACEpD,MAAOiD,KAAK/C,MAAMF,MAAMuD,OACtB,SAAA1E,GAAI,MAAmB,eAAfA,EAAKC,QAEfyB,WAAY,eACZe,YAAa2B,KAAK/C,MAAMoB,cAG1BnB,EAAAC,EAAAC,cAAC+C,EAAD,CACEpD,MAAOiD,KAAK/C,MAAMF,MAAMuD,OAAO,SAAA1E,GAAI,MAAmB,SAAfA,EAAKC,QAC5CyB,WAAY,OACZe,YAAa2B,KAAK/C,MAAMoB,gBAI9BnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAMC,GAAG,OAAOvC,UAAU,YAA1B,uBArCY+C,aAAhBC,EACG1B,UAAY,CACjB5B,MAAO4B,IAAUC,MAAMC,WACvBR,YAAaM,IAAUG,KAAKD,YA0CjBwB,QC1CTE,UAAU,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACdvD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMI,KAAK,MAAMC,aAAW,SAA5B,wCAEEP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAHF,eAKEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YAAOqD,EAASC,cA2EPC,6MArEb3B,MAAQ,CACNjC,MAAO,MAUTsB,YAAc,SAACzC,EAAMC,GACfD,EAAKC,QAAUA,GACjBsD,EAAgBvD,EAAMC,GAAOW,KAAK,WAAM,IAC9BO,EAAUuC,EAAKN,MAAfjC,MACF6D,EAAW7D,EAAMW,IAAI,SAAAmD,GAAC,OAAIA,EAAE7E,KAC9B8E,EAAW,GACD,SAAVjF,GACFyD,EAAKC,SAAS,SAAAwB,GAAY,MAAK,CAC7BhE,MAAOgE,EAAahE,MAAMuD,OAAO,SAAAO,GAAC,OAAIA,EAAE7E,KAAOJ,EAAKI,QAEpD4E,EAASI,SAASpF,EAAKI,IACzBsD,EAAKC,SAAS,SAAAwB,GACZD,EAAW/D,EAAMW,IAAI,SAAAmD,GAAC,OAAKA,EAAE7E,KAAOJ,EAAKI,GAAdE,OAAAC,EAAA,EAAAD,CAAA,GAAwB2E,EAAxB,CAA2BhF,UAAUgF,MAGlEvB,EAAKC,SAAS,SAAAwB,GACZnF,EAAKC,MAAQA,EACbiF,EAAQ,GAAA/E,OAAAG,OAAA+E,EAAA,EAAA/E,CAAOa,GAAP,CAAcnB,MAG1B0D,EAAKC,SAAS,CAAExC,MAAO+D,0FA3BT,IAAAI,EAAAlB,KJNpBlE,MAAK,GAAAC,OAAId,EAAJ,UAAiB,CAAEO,YACrBgB,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAM,GAAI,OAAIA,EAAKC,QIKDP,KAAK,SAAAO,GACrBmE,EAAK3B,SAAS,CAAExC,6CA8BX,IAAAoE,EAAAnB,KACP,OACE9C,EAAAC,EAAAC,cAACgE,EAAA,EAAD,KACElE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACiE,EAAA,EAAD,KACEnE,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,IACLC,OAAQ,kBACNvE,EAAAC,EAAAC,cAACsE,EAAD,CACErD,YAAa8C,EAAK9C,YAClBtB,MAAOoE,EAAKnC,MAAMjC,WAIxBG,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CACEE,KAAK,OACLC,OAAQ,kBACNvE,EAAAC,EAAAC,cAACuE,EAAD,CACE5E,MAAOoE,EAAKnC,MAAMjC,MAClBsB,YAAa8C,EAAK9C,iBAKxBnB,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAOM,UAAWrB,cA9DPH,oBCfvByB,IAASJ,OACPvE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,KACElE,EAAAC,EAAAC,cAAC0E,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.2e3981d1.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query, maxResults) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query, maxResults })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Shelves(props) {\r\n  return (\r\n    <div className=\"bookshelf\">\r\n      <h2 className=\"bookshelf-title\">{props.shelfTitle}</h2>\r\n      <div className=\"bookshelf-books\">\r\n        <ol className=\"books-grid\">\r\n          {props.books.length === 0 && (\r\n            <span role=\"img\" aria-label=\"emoji\">\r\n              ðŸ˜• No Books Found ðŸ˜•\r\n            </span>\r\n          )}\r\n          {props.books &&\r\n            props.books.map((book, id) => (\r\n              <li key={id}>\r\n                <div className=\"book\">\r\n                  <div className=\"book-top\">\r\n                    <div\r\n                      className=\"book-cover\"\r\n                      style={{\r\n                        width: 128,\r\n                        height: 193,\r\n                        backgroundImage: `url(${\r\n                          book.imageLinks\r\n                            ? book.imageLinks.thumbnail\r\n                            : \"https://i.imgur.com/grqWttv.jpg?1\"\r\n                        })`\r\n                      }}\r\n                    />\r\n                    <div className=\"book-shelf-changer\">\r\n                      <select\r\n                        value={book.shelf}\r\n                        onChange={event =>\r\n                          props.moveToShelf(book, event.target.value)\r\n                        }\r\n                      >\r\n                        <option value=\"move\" disabled>\r\n                          Move to...\r\n                        </option>\r\n                        <option value=\"none\">None</option>\r\n                        <option value=\"currentlyReading\">\r\n                          Currently Reading\r\n                        </option>\r\n                        <option value=\"wantToRead\">Want to Read</option>\r\n                        <option value=\"read\">Read</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"book-title\">{book.title}</div>\r\n                  <div className=\"book-authors\">\r\n                    {book.authors ? book.authors.join(\", \") : \"Unknown\"}\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            ))}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nShelves.PropTypes = {\r\n  books: PropTypes.array.isRequired,\r\n  moveToShelf: PropTypes.func.isRequired\r\n};\r\nexport default Shelves;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { DebounceInput } from \"react-debounce-input\";\r\n\r\nimport * as BooksAPI from \"../BooksAPI\";\r\nimport Shelves from \"./Shelves\";\r\n\r\nclass BookSearch extends Component {\r\n  static PropTypes = {\r\n    books: PropTypes.array.isRequired,\r\n    searchResult: PropTypes.array.isRequired,\r\n    moveToShelf: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {\r\n    searchResult: []\r\n  };\r\n\r\n  handleQuery = event => {\r\n    const query = event.target.value;\r\n    if (query !== \"\") {\r\n      BooksAPI.search(query).then(searchResults => {\r\n        if (!searchResults || searchResults.error) {\r\n          this.setState({ searchedBooks: [] });\r\n        }\r\n        const mergingBooks = searchResults.map(searchResult => {\r\n          this.props.books.forEach(book => {\r\n            if (book.id === searchResult.id) searchResult.shelf = book.shelf;\r\n          });\r\n          return searchResult;\r\n        });\r\n        this.setState({ searchResult: mergingBooks });\r\n      });\r\n    } else {\r\n      this.setState({ searchResult: [] });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <Link to=\"/\" className=\"close-search\">\r\n            Close\r\n          </Link>\r\n          <div className=\"search-books-input-wrapper\">\r\n            <DebounceInput\r\n              type=\"text\"\r\n              debounceTimeout={600}\r\n              value={this.props.books.string}\r\n              onChange={this.handleQuery}\r\n              placeholder=\"Search by title or author\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"search-books-results\">\r\n          <Shelves\r\n            moveToShelf={this.props.moveToShelf}\r\n            shelfTitle=\"Search Results\"\r\n            books={this.state.searchResult}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default BookSearch;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Shelves from \"./Shelves\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass MyReads extends Component {\r\n  static PropTypes = {\r\n    books: PropTypes.array.isRequired,\r\n    moveToShelf: PropTypes.func.isRequired\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"list-books\">\r\n        <div className=\"list-books-title\">\r\n          <h1>MyReads</h1>\r\n        </div>\r\n        <div className=\"list-books-content\">\r\n          <div>\r\n            <Shelves\r\n              books={this.props.books.filter(\r\n                book => book.shelf === \"currentlyReading\"\r\n              )}\r\n              shelfTitle={\"Currently Reading\"}\r\n              moveToShelf={this.props.moveToShelf}\r\n            />\r\n\r\n            <Shelves\r\n              books={this.props.books.filter(\r\n                book => book.shelf === \"wantToRead\"\r\n              )}\r\n              shelfTitle={\"Want To Read\"}\r\n              moveToShelf={this.props.moveToShelf}\r\n            />\r\n\r\n            <Shelves\r\n              books={this.props.books.filter(book => book.shelf === \"read\")}\r\n              shelfTitle={\"Read\"}\r\n              moveToShelf={this.props.moveToShelf}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"open-search\">\r\n          <Link to=\"/add\" className=\"add-book\">\r\n            Add a book\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default MyReads;","import React, { Component } from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport * as BooksAPI from \"./BooksAPI\";\r\nimport BookSearch from \"./components/BookSearch\";\r\nimport MyReads from \"./components/MyReads\";\r\nimport \"./App.css\";\r\n\r\nconst NoMatch = ({ location }) => (\r\n  <div>\r\n    <span role=\"img\" aria-label=\"emoji\">\r\n      ðŸ˜• Erorr 404!! ðŸ˜•\r\n      <br />\r\n      <br />\r\n      No match for\r\n      <br />\r\n      <code>{location.pathname}</code>\r\n    </span>\r\n  </div>\r\n);\r\n\r\nclass BooksApp extends Component {\r\n  state = {\r\n    books: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    BooksAPI.getAll().then(books => {\r\n      this.setState({ books });\r\n      //console.log(books);\r\n    });\r\n  }\r\n\r\n  moveToShelf = (book, shelf) => {\r\n    if (book.shelf !== shelf) {\r\n      BooksAPI.update(book, shelf).then(() => {\r\n        const { books } = this.state;\r\n        const booksIds = books.map(b => b.id);\r\n        let newBooks = [];\r\n        if (shelf === \"none\")\r\n          this.setState(currentState => ({\r\n            books: currentState.books.filter(b => b.id !== book.id)\r\n          }));\r\n        if (booksIds.includes(book.id)) {\r\n          this.setState(currentState => {\r\n            newBooks = books.map(b => (b.id === book.id ? { ...b, shelf } : b));\r\n          });\r\n        } else {\r\n          this.setState(currentState => {\r\n            book.shelf = shelf;\r\n            newBooks = [...books, book];\r\n          });\r\n        }\r\n        this.setState({ books: newBooks });\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"app\">\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              render={() => (\r\n                <MyReads\r\n                  moveToShelf={this.moveToShelf}\r\n                  books={this.state.books}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/add\"\r\n              render={() => (\r\n                <BookSearch\r\n                  books={this.state.books}\r\n                  moveToShelf={this.moveToShelf}\r\n                />\r\n              )}\r\n            />\r\n\r\n            <Route component={NoMatch} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BooksApp;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport BooksApp from \"./App.js\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <BooksApp />\r\n  </HashRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}